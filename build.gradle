plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'


}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	jaxb
}

bootJar {
	archiveBaseName = 'gs-producing-web-service'
	archiveVersion =  '0.1.0'
}

dependencies {
	implementation group: 'com.aerospike', name: 'spring-data-aerospike', version: '2.4.2.RELEASE'
	implementation "org.modelmapper:modelmapper:2.4.2"

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'wsdl4j:wsdl4j'
	implementation "com.sun.xml.bind:jaxb-core:2.3.0.1"
	implementation "javax.xml.bind:jaxb-api:2.3.1"
	implementation "com.sun.xml.bind:jaxb-impl:2.3.1"
	implementation "org.javassist:javassist:3.25.0-GA"

	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"



	jaxb (
			'com.sun.xml.bind:jaxb-xjc:2.2.7',
			'com.sun.xml.bind:jaxb-impl:2.2.7'
	)
	testImplementation('org.springframework.boot:spring-boot-starter-test')


}



test {
	useJUnitPlatform()
}


sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}

task   genJaxb {
	ext.sourcesDir = "${projectDir}/src/main/java"
	ext.schema = "src/main/resources/users.xsd"

	outputs.dir sourcesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
		}
	}
}

compileJava.dependsOn genJaxb